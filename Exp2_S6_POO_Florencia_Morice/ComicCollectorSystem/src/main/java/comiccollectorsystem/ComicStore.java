package comiccollectorsystem;

import java.io.*;
import java.nio.charset.StandardCharsets;
import java.util.*;

public class ComicStore {

    private TreeSet<Comic> comics = new TreeSet<>(Comparator.comparing(Comic::getTitulo, String.CASE_INSENSITIVE_ORDER));
    private HashMap<String, Usuario> usuarios = new HashMap<>();

    // Agrega un c√≥mic si no est√° repetido (por t√≠tulo + autor)
    public void agregarComic(Comic c) {
        if (comics.add(c)) {
            System.out.println("‚úÖ Comic agregado: " + c.getTitulo());
        } else {
            System.out.println("‚ö†Ô∏è El comic ya existe (por t√≠tulo y autor).");
        }
    }

    // Registra un usuario si no existe (por ID)
    public void registrarUsuario(Usuario u) {
        String id = u.getId().toLowerCase();
        if (usuarios.containsKey(id)) {
            System.out.println("‚ö†Ô∏è Usuario ya registrado");
        } else {
            usuarios.put(id, u);
            System.out.println("‚úÖ Usuario registrado: " + u.getNombre());
        }
    }

    // Muestra todos los c√≥mics ordenados
    public void mostrarComics() {
        if (comics.isEmpty()) {
            System.out.println("üì≠ No hay c√≥mics registrados.");
            return;
        }
        System.out.println("\nüìö Lista de C√≥mics:");
        for (Comic c : comics) {
            System.out.println("‚Ä¢ " + c);
        }
    }

    // Muestra todos los usuarios registrados
    public void mostrarUsuarios() {
        if (usuarios.isEmpty()) {
            System.out.println("üì≠ No hay usuarios registrados.");
            return;
        }
        System.out.println("\nüë• Usuarios registrados:");
        for (Usuario u : usuarios.values()) {
            System.out.println("‚Ä¢ " + u);
        }
    }

    // Carga c√≥mics desde un archivo CSV en UTF-8
    public void cargarComicsDesdeCSV(String archivo) {
        try (BufferedReader br = new BufferedReader(
                new InputStreamReader(new FileInputStream(archivo), StandardCharsets.UTF_8))) {

            String linea;
            int contador = 0;

            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(",");
                if (datos.length == 3) {
                    Comic c = new Comic(datos[0].trim(), datos[1].trim(), datos[2].trim());
                    agregarComic(c);
                    contador++;
                } else {
                    System.out.println("‚ö†Ô∏è L√≠nea con formato incorrecto: " + linea);
                }
            }

            System.out.println("‚úÖ Se cargaron " + contador + " c√≥mics desde el archivo.");

        } catch (IOException e) {
            System.out.println("‚ùå Error al leer el archivo: " + e.getMessage());
        }
    }

    // Guardar usuarios en un archivo de texto en UTF-8
    public void guardarUsuarios(String archivo) {
        try (Writer fw = new OutputStreamWriter(new FileOutputStream(archivo), StandardCharsets.UTF_8)) {
            for (Usuario u : usuarios.values()) {
                fw.write(u.toString() + "\n");
            }
            System.out.println("‚úÖ Usuarios guardados en el archivo.");
        } catch (IOException e) {
            System.out.println("‚ùå Error al guardar usuarios: " + e.getMessage());
        }
    }

    // Prestar un c√≥mic por t√≠tulo
    public void prestarComic(String titulo) {
        for (Comic c : comics) {
            if (c.getTitulo().equalsIgnoreCase(titulo)) {
                if (!c.estaPrestado()) {
                    c.prestar();
                    System.out.println("üìñ Comic prestado: " + c.getTitulo());
                } else {
                    System.out.println("‚ö†Ô∏è El c√≥mic ya est√° prestado.");
                }
                return;
            }
        }
        System.out.println("‚ùå No se encontr√≥ un c√≥mic con ese t√≠tulo.");
    }

    // Devolver un c√≥mic por t√≠tulo
    public void devolverComic(String titulo) {
        for (Comic c : comics) {
            if (c.getTitulo().equalsIgnoreCase(titulo)) {
                if (c.estaPrestado()) {
                    c.devolver();
                    System.out.println("‚úÖ Comic devuelto: " + c.getTitulo());
                } else {
                    System.out.println("‚ö†Ô∏è El c√≥mic no estaba prestado.");
                }
                return;
            }
        }
        System.out.println("‚ùå No se encontr√≥ un c√≥mic con ese t√≠tulo.");
    }
}